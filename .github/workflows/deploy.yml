name: Build, Push, and Deploy

on:
  push:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    # Step 1: Checkout the repository
    - name: Checkout Code
      uses: actions/checkout@v3

    # Step 2: Set up Docker Buildx
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2

    # Step 3: Log in to Docker Hub
    - name: Debug Docker Credentials
      run: |
        echo "DOCKER_USERNAME=${{ secrets.DOCKER_USERNAME }}"
        echo "DOCKER_PASSWORD=${{ secrets.DOCKER_PASSWORD }}"
    - name: Log in to Docker Hub
      run: echo "${{ secrets.DOCKER_PASSWORD }}" | docker login -u "${{ secrets.DOCKER_USERNAME }}" --password-stdin

    # Step 4: Build and Push Docker Image
    - name: Build and Push Docker Image
      run: |
        docker buildx build --platform linux/arm64 -t eyecandy101/flask-app:latest --push .

    # Step 5: Configure Kubectl
    - name: Set up Kubectl
      uses: azure/setup-kubectl@v3
      with:
        version: 'latest'

    # Step 6: ensuring kubectl can connect to the K3s cluster:

    - name: Configure Kubernetes Connection
      run: |
        mkdir -p ~/.kube
        cat << EOF > ~/.kube/config
        apiVersion: v1
        clusters:
        - cluster:
            certificate-authority-data: ${{ secrets.K8S_CERTIFICATE_AUTHORITY_DATA }}
            server: ${{ secrets.K8S_SERVER }}
          name: default
        contexts:
        - context:
            cluster: default
            user: default
          name: default
        current-context: default
        kind: Config
        preferences: {}
        users:
        - name: default
          user:
            client-certificate-data: ${{ secrets.K8S_CLIENT_CERTIFICATE_DATA }}
            client-key-data: ${{ secrets.K8S_CLIENT_KEY_DATA }}
        EOF
   
    # Step 7: Deploy to K3s
    - name: Deploy to K3s
      run: |
        kubectl apply -f deployment.yaml
        kubectl apply -f service.yaml
      

 
        
# pre Step 6: ensuring kubectl can connect to the K3s cluster:
  #  - name: Test Kubernetes Connectivity
  #    env:
    #    KUBECONFIG: ${{ secrets.KUBECONFIG }}
    #  run: kubectl cluster-info


    # Step 6: Deploy to K3s
   # - name: Deploy to K3s
   #   env:
   #     KUBECONFIG: ${{ secrets.KUBECONFIG }}
  #    run: |
   #     mkdir -p ~/.kube
    #    echo "${{ secrets.KUBECONFIG }}" > ~/.kube/config
    #    kubectl apply -f deployment.yaml
     #   kubectl apply -f service.yaml

